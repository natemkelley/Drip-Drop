var compute = require('./compute.js');

var WHOLEDATASET = {};
var PIPE1AVTIME30 = {}; //done
var PIPE2AVTIME30 = {}; //done
var PIPE1BIGDAY = {}; //done
var PIPE2BIGDAY = {}; //done
var PIPESBIGDAY = {}; //done
var PIPE1AVMONTH = {}; //done
var PIPE2AVMONTH = {}; //done
var PIPE1WEEKDAY = {}; //done
var PIPE2WEEKDAY = {}; //done
var ERROR = {};
var LITERS;
var TIMER;

exports.setWholeDataSet = function (data) {
    WHOLEDATASET = data
    console.log('getData -> setWholeDataSet')
}
exports.getWholeDataSet = function () {
    console.log('getData -> getWholeDataSet')
    return WHOLEDATASET
}
exports.setPipe1AvTime30 = function (data) {
    PIPE1AVTIME30 = data
    console.log('setData -> setPipe1AvTime30')
}
exports.getPipe1AvTime30 = function () {
    console.log('getData -> getPipe1AvTime30')
    return PIPE1AVTIME30
}
exports.setPipe2AvTime30 = function (data) {
    PIPE2AVTIME30 = data
    console.log('setData -> setPipe2AvTime30')
}
exports.getPipe2AvTime30 = function () {
    console.log('getData -> getPipe2AvTime30')
    return PIPE2AVTIME30
}
exports.setPipe1BigDay = function (data) {
    PIPE1BIGDAY = data
    console.log('setData -> setPipe1BigDay')
}
exports.getPipe1BigDay = function () {
    console.log('getData -> getPipe2BigDay')
    return PIPE1BIGDAY
}
exports.setPipe2BigDay = function (data) {
    PIPE2BIGDAY = data
    console.log('setData -> setPipe2BigDay')
}
exports.getPipe2BigDay = function () {
    console.log('getData -> getPipe2BigDay')
    return PIPE2BIGDAY
}
exports.setPipesBigDay = function (data) {
    PIPESBIGDAY = data
    console.log('setData -> setPipesBigDay')
}
exports.getPipesBigDay = function () {
    console.log('getData -> getPipesBigDay')
    return PIPESBIGDAY
}
exports.setPipe1AvMonth = function (data) {
    PIPE1AVMONTH = data
    console.log('setData -> setPipesAvMonth')
}
exports.getPipe1AvMonth = function () {
    console.log('getData -> getPipe1AvMonth')
    return PIPE1AVMONTH
}
exports.setPipe2AvMonth = function (data) {
    PIPE2AVMONTH = data
    console.log('setData -> setPipe2AvMonth')
}
exports.getPipe2AvMonth = function () {
    console.log('getData -> getPipe2AvMonth')
    return PIPE2AVMONTH
}
exports.setPipe1Weekday = function (data) {
    PIPE1WEEKDAY = data
    console.log('setData -> setPipe1Weekday')
}
exports.getPipe1Weekday = function () {
    console.log('getData -> getPipe1Weekday')
    return PIPE1WEEKDAY
}
exports.setPipe2Weekday = function (data) {
    PIPE2WEEKDAY = data
    console.log('setData -> setPipe2Weekday')
}
exports.getPipe2Weekday = function () {
    console.log('getData -> getPipe2Weekday')
    return PIPE2WEEKDAY
}
exports.setSettings = function (settings) {
    console.log('setData -> setSettings')
    LITERS = settings.settings.litersAlert;
    TIMER = settings.settings.timerAlert;
}
exports.getSettings = function () {
    var returnJSON = {
        liters: LITERS,
        timer: TIMER
    }
    return returnJSON
}


//currentData
var CURRENTPIPE1 = [1, 2, 3, 1, 8];
var CURRENTPIPE2 = [2, 0, 5, 1, 1];
exports.setCurrentPipe1 = function (data) {
    // var newDataPoint = randomScalingFactor();
    var newDataPoint = data;
    newDataPoint = Math.round(newDataPoint * 100) / 100;
    CURRENTPIPE1.push(newDataPoint);
    for (i = 0; i < CURRENTPIPE1.length; i++) {
        CURRENTPIPE1[i] = CURRENTPIPE1[i + 1];
    }
    CURRENTPIPE1.pop();
    console.log('setCurrentPipe1')
}
exports.getCurrentPipe1 = function () {
    console.log('getData -> getCurrentPipe1')
    return CURRENTPIPE1
}
exports.setCurrentPipe2 = function () {
    var max = 10;
    var min = 1;
    var rando = Math.random() * (max - min) + min;
    var newDataPoint = rando;
    newDataPoint = Math.round(newDataPoint * 100) / 100;
    CURRENTPIPE2.push(newDataPoint);
    for (i = 0; i < CURRENTPIPE2.length; i++) {
        CURRENTPIPE2[i] = CURRENTPIPE2[i + 1];
    }
    CURRENTPIPE2.pop();
    console.log(CURRENTPIPE2)
    console.log('getData -> setCurrentPipe1')
}
exports.getCurrentPipe2 = function () {
    var max = 10;
    var min = 1;
    var rando = Math.random() * (max - min) + min;
    var newDataPoint = rando;
    newDataPoint = Math.round(newDataPoint * 100) / 100;
    CURRENTPIPE2.push(newDataPoint);
    for (i = 0; i < CURRENTPIPE2.length; i++) {
        CURRENTPIPE2[i] = CURRENTPIPE2[i + 1];
    }
    CURRENTPIPE2.pop();

    console.log('getData -> getCurrentPipe2')
    return CURRENTPIPE2
}
exports.setError = function (data) {
	var time = new Date();
   var errorJSON = {
	error: 500,
	time: time.getTime();
   }
      console.log(errorJSON);
}